@page "/employees/create"
@using demo.Models
@using demo.Services
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager

<PageTitle>Create New Employee</PageTitle>

<h3>Create Employee</h3>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Employee" OnValidSubmit="AddEmployee" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputSelect id="title" @bind-Value="Employee.Title" class="form-select" aria-required="true">
                    <option value="">-- Select Title --</option>
                    <option value="Dr.">Dr.</option>
                    <option value="Mr.">Mr.</option>
                    <option value="Mrs.">Mrs.</option>
                    <option value="Ms.">Ms.</option>
                    <option value="Prof.">Prof.</option>
                </InputSelect>
                <ValidationMessage For="() => Employee.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="firstname" class="form-label">First Name:</label> 
                <InputText id="firstname" @bind-Value="Employee.FirstName" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employee.FirstName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">Last Name:</label> 
                <InputText id="lastname" @bind-Value="Employee.LastName" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employee.LastName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="birthdate" class="form-label">Birth Date:</label> 
                <InputDate id="birthdate" @bind-Value="Employee.BirthDate" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employee.BirthDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="position" class="form-label">Position:</label> 
                <InputText id="position" @bind-Value="Employee.Position" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employee.Position" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="hiredate" class="form-label">Hire Date:</label> 
                <InputDate id="hiredate" @bind-Value="Employee.HireDate" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employee.HireDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="state" class="form-label">State:</label> 
                <InputText id="state" @bind-Value="Employee.State" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Employee.State" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="notes" class="form-label">Notes:</label> 
                <InputText id="notes" @bind-Value="Employee.Notes" class="form-control" /> 
                <ValidationMessage For="() => Employee.Notes" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="homeaddress" class="form-label">Home Address:</label> 
                <InputText id="homeaddress" @bind-Value="Employee.HomeAddress" class="form-control" /> 
                <ValidationMessage For="() => Employee.HomeAddress" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Employee Employee { get; set; } = new()
    {
        BirthDate = DateTime.Today,
        HireDate = DateTime.Today
    };

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddEmployee()
    {
        var success = await EmployeeService.CreateEmployeeAsync(Employee);
        if (success)
        {
            NavigationManager.NavigateTo("/");
        }
        // You can add error handling here if needed
    }
}
